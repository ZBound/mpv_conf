### 文档_ https://github.com/hooke007/MPV_lazy/blob/main/portable_config/profiles.conf

#部分配置参考 https://github.com/dyphire/mpv-config/blob/master/mpv.conf
#########   https://github.com/hooke007/MPV_lazy/

## 将 # 符号添加至 profile-cond 前即为关闭此条件配置
 
 ##############
 # 配置预设组 #
 ##############

[SDR-Gamut]
profile-desc = SDR 内容的色域映射
profile-cond = p["video-params/primaries"] ~= "bt.709" and p["video-params/gamma"] == "bt.1886"
profile-restore = copy
gamut-mapping-mode = clip

[rot-fix]
#问题状态 https://github.com/mpv-player/mpv/issues/8223
profile-desc = 修复旋转输出的色度破坏
profile-cond = (p["video-params/rotate"] == 90 or p["video-params/rotate"]==270) and p.current_vo ~= "gpu-next"
profile-restore = copy
hwdec = no
glsl-shaders = ""

[video-sync]
profile-desc = 当音频调整速度超过阈值时改变音视频同步模式，以避免明显的音高变化
profile-cond = (speed * audio_speed_correction) > 0 and ((speed * audio_speed_correction) < 0.96 or (speed * audio_speed_correction) > 1.04) and not (p["estimated-vf-fps"] > 47 or p["display-fps"] > 120)
profile-restore = copy-equal
video-sync = display-tempo


[speed_limit]
 profile-desc = 速度变化下限的控制
 profile-cond = p.speed<0.1
 speed = 0.1


## https://github.com/mpv-player/mpv/issues/11122
[vsync_auto]
 profile-desc = 基于刷新率或帧率的同步模式
 profile-cond = p.display_fps<122 and p.container_fps<32
 profile-restore = copy
 video-sync = display-resample
 video-sync-max-video-change = 5
 interpolation = yes
 tscale = oversample


[deband_bitrate]
 profile-desc = 基于码率的自动去色带
 profile-cond = ((p.file_size/1024)*8)/p.duration<=1000
 profile-restore = copy
 deband = yes


[save_props_auto]
 profile-desc = 基于进度或时长或视频轨类型的自动保存属性
 profile-cond = p.eof_reached or p.time_remaining<=180 or p.duration<=180 or not vid or p["current-tracks/video/albumart"] or p["current-tracks/video/image"]
 profile-restore = copy
 save-position-on-quit = no


[8k-fix]
 profile-desc = 8k 下使用 d3d11va 硬解来解决掉帧问题，该方案仅限 --gpu-api=d3d11 下可用
 profile-cond = p["video-params/w"] > 7000 or p["video-params/h"] > 3000
 profile-restore = copy
 hwdec = auto-safe
 video-sync = audio

[audio]
 profile-desc=音乐
 profile-cond=aid and (not vid or p["current-tracks/video/albumart"])
 profile-restore=copy
 prefetch-playlist
 cscale = bilinear
 scale = bilinear
 dscale = bilinear
 dither = no

##⇘⇘[H2S-STM]为备选的HDR转SDR方案，若你的显卡不支持 --hdr-compute-peak 应启用这个方案且禁用 [H2S-DTM]
##其它可选的改良方案 https://github.com/hooke007/MPV_lazy/discussions/25

[H2S-STM]
 profile-desc           = HDR转SDR（静态色调映射）
#profile-cond           = p["video-params/sig-peak"]>1
 profile-restore        = copy
#blend-subtitles        = video      # 问题状态（静态映射不受影响） https://github.com/mpv-player/mpv/issues/6368
 target-peak            = 100        # <10-10000> 值越低，画面整体越亮。默认auto即203（不要用作通用参数，因为会影响sdr片源的正常输出亮度）
 hdr-compute-peak       = no         # 当yes时提供了基于场景的动态色调映射默认auto（完整支持该特性需要显卡opengl版本≥4.3）
 tone-mapping           = hable      # <auto默认|clip|mobius|reinhard|hable|bt.2390|gamma|linear> 色调映射算法
#tone-mapping-param     = default    # 上项的小参。default根据算法的使用不同初始值，对部分算法无效
                                     # clip=1.0; mobius=0.3; reinhard=0.5; gamma=1.8; linear=1.0
 tone-mapping-max-boost = 1.0        # <1.0-10.0> 过曝指数，默认1.0
 gamut-mapping-mode     = desaturate # <auto默认|clip|warn|desaturate> 完成色调映射后的色域裁剪方式


[H2S-DTM]
 profile-desc             = HDR转SDR（动态色调映射-基础版）
 profile-cond             = p["video-params/sig-peak"]>1
 profile-restore          = copy
 blend-subtitles          = no
#target-peak              = auto
 hdr-compute-peak         = yes
 hdr-peak-decay-rate      = 150        # [须 --hdr-compute-peak=yes ] <0.0-1000.0> 亮度峰值检测算法的衰减率，默认100.0
 hdr-scene-threshold-low  = 4          # [须 --hdr-compute-peak=yes ] <0.0-100.0> 场景变化亮度的下限阈值，默认1.0
 hdr-scene-threshold-high = 16         # [须 --hdr-compute-peak=yes ] <0.0-100.0> 场景变化亮度的上限阈值，默认3.0
 tone-mapping             = bt.2390
#tone-mapping-param       = default
 tone-mapping-max-boost   = 1.5
 gamut-mapping-mode       = clip


[BDMV]
 profile-desc = 播放BDMV时使用软解
 profile-cond = filename:match("BDMV")~=nil or filename:match("bdmv")~=nil or filename:match("%.m2ts$")~=nil
 profile-restore = copy
 hr-seek = always
 hwdec = no


[HDR_DolbyVision]
 profile-desc = hdr杜比视界
 profile-cond = filename:match("%.DoVi")
 profile-restore = copy
 vo = gpu-next
 hdr-compute-peak = no
 tone-mapping = st2094-40
 
[minimized]
 profile-desc=播放视频时最小化自动暂停
 profile-cond=window_minimized and vid and not p["current-tracks/video/albumart"]
 profile-restore=copy-equal
 pause