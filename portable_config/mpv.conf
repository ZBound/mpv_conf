### 行首如果存在注释符号 "#" 则说明该项 “未启用”
### 文档_ https://github.com/hooke007/MPV_lazy/blob/main/portable_config/mpv.conf
### 注意：当前预设下，选项 --volume的关联属性已被全局追踪记录，移除缓存文件 saved-props.json 才能使其的更改生效


 include = "~~/profiles.conf"

 use-filedir-conf = yes
 
 #log-file = "~~/files/mpv.log"                    # 记录 log
 
 # 基础设置
osc = no                                           # 禁用原 OSC（即内置的"osc.lua"脚本）以兼容第三方的界面样式[第三方 osc 脚本使用的前置条件] 
osd-fractions = yes                                # 以秒为单位显示OSD时间（毫秒精度），有助于查看视频帧的确切时间戳，默认 no

osd-on-seek = msg                                  # 快进快退时显示时间进度
osd-bar-h                = 3                       # <0.1-50> bar 的高度，以画面的百分比为单位，默认 3.125
border = no                                        # 边框的显示状态，默认yes
osd-border-size          = 2.5                     # OSD 边框尺寸，默认 3

keep-open = yes                                    # <yes|默认no|always> 默认为播完列表不暂停，值为 yes 播完列表暂停，值为 always 时每个文件播完都暂停
save-position-on-quit = yes                        # 退出时保存当前的播放状态
watch-later-options = start,vid,aid,sid            # 指定保存播放状态的属性列表（示例表示：播放位置、视频 音频 字幕轨号）

icc-cache-dir = "~~/_cache/icc"                    # 指定ICC配置文件的3dlut缓存目录
#gpu-shader-cache = no                             # 是否在本地存储GLSL着色器的编译缓存，可以提高启动性能，默认 yes
gpu-shader-cache-dir = "~~/_cache/shader"          # 指定GLSL着色器的编译缓存目录
watch-later-directory = "~~/_cache/watch_later"    # 稍后观看功能的缓存目录，其中的文件记录 --watch-later-options 指定的项。

demuxer-max-bytes = '1000MiB'                      # 播放网络视频时的向后缓存大小（KiB或MiB），默认写入内存

hr-seek = always                                   # 启用精准跳转

autofit=80%                                        # <[W[xH]]> 初始窗口大小及窗口下文件播放时缩放的目标大小（百分比或像素数），默认：60%
autofit-larger=90%x90%                             # <[W[xH]]> 窗口模式下最大占屏幕的百分比（例如在 FHD 屏上打开 4k 视频初始窗口过大）
autofit-smaller=30%x30% 

msg-level=all=info                                 # <module1=level1,module2=level2,...> 控制每个模块在控制台输出日志的详细程度，这也会影响日志文件。可用 level：<no|fatal|error|warn|info|status 默认|verbose|debug|trace>
                                                   # 示例为仅显示 info 及以上级别的信息。更多信息及用例参考官方手册：https://mpv.io/manual/master/#options-msg-level
  
# 解码设置

vo = gpu-next                                           # mpv-lazy 开始使用 gpu-next ，跟风换一下 https://github.com/hooke007/MPV_lazy/discussions/39

gpu-api = d3d11                                    # Linux/macOS： vulkan 或者 opengl，推荐 vulkan；Windows：vulkan、d3d11 及 opengl 都可选。推荐使用 d3d11 的原生 api，具有最好的性能并实现了 10bit 输出

hwdec = d3d12va-copy,nvdec-copy,auto-copy-safe                           # 指定应使用的硬件视频解码 API，软解改为 no。## 经测试发现--vo=gpu 下的 copy 硬解模式在 4K 及以上视频帧率>=60fps 时将会产生异常掉帧，建议使用软解模式或无 copy 硬解模式
 hwdec-codecs = h264,hevc,vp8,vp9,av1                                 # 在选定范围内的编码格式尝试硬解

#vd-lavc-dr = no                                   # [当 gpu-api=d3d11 时] 启用直接渲染（默认：yes）。如果设置为 yes，视频将直接解码到 GPU 视频内存（或暂存缓冲区）；如果设置为 no，视频将解码到系统内存，然后复制到 GPU 内存。这可能会导致性能下降，但可能会解决某些低端 intel GPU 上的问题

##⇘⇘双显卡笔记本的处理
#vd=h264_qsv,hevc_qsv,mpeg2_qsv,vp9_qsv,vp8_qsv,av1_qsv
                                      # 在 Intel 核显&NVDIA_MX_x50 这种配置组合的条件下，如果使用独显渲染，因为 MX 系列独显没有解码单元，即使使用 hwdec 指定硬解实际依然只能软解
                                      # 使用此参数可使用核显硬解、辅助渲染的同时让独显主力渲染（当 hwdec=no 时快进可能造成 MPV 假死，建议使用 xxxx-copy 的解码方式）
#d3d11-adapter="NVIDIA GeForce RTX 2070 Super"
                                      # [当 gpu-api=d3d11 时] 指定某张显卡作为主渲染输出，默认情况下自动选择系统指定的主渲染显卡
                                      # 显卡名可查看任务管理器自行更改适配。该参数等效在驱动面板中设置以独显运行 mpv
                                      # 例如使用 I+N 的双显笔记本的内屏时，实际使用的是"Intel(R) UHD Graphics"，修改该项示例指定独显可降低任务管理器中双显卡的 3d 渲染占比
                                      # 大多数双显卡笔记本在外接显示器时，表现类似“独显直连”，此时无需该参数也会自动用独显输出
                                      # [当 gpu-api=vulkan 时] 用参数 --vulkan-device 代替 --d3d11-adapter
#vulkan-device="NVIDIA GeForce RTX 2070 Super"
                                      # [当 gpu-api=vulkan 时] 此参数代替 --d3d11-adapter 执行指定显卡的职能
                                      # 默认为空，例值 "NVIDIA GeForce RTX 2070 Super" （必须使用完整的设备名或 UUID）
                                      
 
 # 视频设置

#icc-profile-auto = yes                            # 自动加载ICC色彩配置文件，默认关闭，如果你屏幕有校色可以开

#video-sync = display-resample                     # 视频同步模式设置为显示器重新采样，这有助于减少视频撕裂和不平滑的播放，可能对音频有一定影响，默认关闭
#video-sync-max-video-change = 5                   # [仅当 --video-sync=display-xxxx 时生效] 默认值：1
#interpolation = yes                               # 开启帧插值，这有助于在视频帧率低于显示器刷新率时平滑播放，默认关闭
#tscale = oversample                               # [仅开启 --interpolation 时生效] 选择时域插值算法（非 MEMC 运动补偿）。 # SVP 补帧时推荐关闭
                                                   # 默认插值算法为 oversample。总体而言 mitchell 更平滑（当然不好和 SVP 插帧比），但会有模糊。oversample 没有模糊，但不平滑（基本还原 24 帧的样子，效果类似 MADVR 的 smoothmotion），triangle 介于两者之间，catmull_rom 相对锐利

cscale = bilinear                                  # 色度还原算法设置为双线性滤波，用于缩放色彩空间时的处理，外部着色器"KrigBilateral.glsl"虽然效果最好，特殊片源 (VFR) 及特殊着色器组合下可能导致耗能过高

scale = spline36                                   # 放大算法设置为spline36，内置 scale 算法中 spline36 算法更适合实拍类图像，ewa 类算法更适合 anime 类图像 https://github.com/haasn/mpvhq-upscalers
glsl-shaders-append = "~~/shaders/AMD_FSR/AMD_FSR_EASU_rgb.glsl"  
                                                        # 引入AMD_FSR_EASU_rgb.glsl放大着色器，AMD_FSR移植自AMD FidelityFX Super Resolution (FSR)，原始设计用于游戏，是一种先执行常规放大后再进行对比度自适应锐化的改良算法。放大部分基于lanczos+bilinear，锐化部分基于cas。

dscale = bicubic                                   # 缩小算法设置为bicubic，减小能耗

sigmoid-upscaling = no                             #放大时非线性的颜色转换，可避免强振铃伪影。默认 yes ###着色器可代替两项小参
correct-downscaling = no                           #可用于削弱部分算法缩小处理时产生的锯齿。默认 yes   ###


dither-depth = 8                                   # 我的显示器是8位色深，所以我设置抖动深度设置为8位，作用是减少色带效应，但可能带来一部分噪点，10位就设置成10，8抖10若显示不正常也请设置8

#dither = error-diffusion                         # <默认 fruit|ordered|error-diffusion|no> ，error-diffusion 算法效果最好也最耗能，当效能不足时将自动回落到 fruit 算法

#deband=no                                         # 消去色带，无需常驻，可以选择视片源手动开启

#deband-iterations=1                               # <0-16> 去色带执行次数，越高强度但也越费时费力，数值>4 实际无效（默认 1），3-4 相当于 madvr 的 deband 设为 high 的效果

#deband-threshold=48                               # <0-4096> 滤波器的截止阈值，更高的数字会增加强度，但会逐渐减少图像细节（默认 48）

#deband-range=16                                   # <1-64> 初始半径，越大的值去色带越强且性能占用越高；值越小越平滑（默认值 16）。如果增大 --deband-iterations，需减小此值来进行补偿

#deband-grain=32                                   # <0-4096> 添加额外动态噪点，有助于掩盖剩余的量化伪影（默认 32）

   

# 音频设置

audio-device = auto                                # 此项用于指定启动时的音频输出设备

audio-channels = 7.1,5.1,stereo                    #7.1,5.1,stereo 为常见音频输出设备的优先级顺序，会自动回退选择符合实际音频输出设备的输出值（大多数使用的是 stereo 双声道设备），多声道音轨下混成双声道时，如果觉得背景音过响，角色台词声音小，尝试看看这个：https://github.com/mpv-player/mpv/issues/6563 

ao = wasapi                                        # windows 推荐 wasapi；linux 推荐 alsa，需配合参数--audio-channels=auto；macos 推荐 coreaudio 或 coreaudio_exclusive
                                                   ## 经测试如果有其他软件独占音频通道后再打开 MPV 画面会无比卡顿

volume = 100                                       # 注意：此参数当前在 script-opts.conf 文件中存在关联处理（参见 “保存全局属性并恢复” 部分）

gapless-audio = no                                 # 尝试在文件更改时播放连续的音频文件，而不会静音或中断。默认值 weak: 当音频格式发生变化时初始化音频输出

audio-file-auto = fuzzy                            # 自动加载模糊匹配外挂音轨
audio-file-paths = audio;audios;**                 # <path1:path2:...> 在指定的额外目录中寻找匹配的音轨，支持相对和绝对路径



# 字幕

sub-auto = fuzzy                                   # 自动加载模糊匹配的字幕文件

sub-file-paths = 'sub;subtitles;字幕'              # 指定字幕文件的搜索路径，多个路径用分号隔开

slang = chs,sc,zh-CN,zh-Hans,cht,tc,zh-Hant,zh-HK,zh-TW,chi,zho,zh  # 设置字幕语言的优先级列表，但MPV优先加载外挂轨道，此项参数可能实际用处不大。

sub-codepage=gb18030                         #mpv会首先尝试 UTF-8 编码，如果失败则尝试 GB18030编码

#sub-ass-override = force                         # <默认 yes|no|force|scale|strip> 设置ass和ssa字幕渲染方式，控制是否应用样式覆盖
                                                  ###no：禁用；yes：应用所有--sub-ass-*样式覆盖选项；force：强制应用所有--sub-*选项；scale：类似 yes，但也适用--sub-scale；strip：去除所有 ASS 标签和样式，此项也会影响 pgs 和 srt 等格式字幕

###⇘⇘纯文字字幕（如srt）和系统中没有字幕指定字体的字幕（如ass），或者启用了 sub-ass-override 参数
sub-font = "思源黑体 CN"                         # 设置字幕默认字体为思源黑体 Bold
sub-font-size = 50                                # 设置字幕字体大小
sub-color = "#FFFFFFFF"                           # 设置字幕颜色

sub-border-size = 0.5                             # 设置字幕边框大小
sub-border-color = "#FF000000"                    # 设置字幕边框颜色

#sub-back-color = "FF262626"                      # 设置字幕背景颜色

sub-shadow-offset = 0.5                           # 文本字幕阴影大小
sub-shadow-color = "#FF000000"                    # 文本字幕阴影颜色

#sub-ass-force-margins = yes                      # 默认 no，设为 yes 时，将使 ass 字幕尽可能输出在黑边上。不推荐常设为 yes，会破坏部分 ass 的 pos 标注效果

#sub-ass-force-style = Fontname = 思源黑体 Bold    # 强制使用特定的ASS字幕样式

#sub-scale-by-window = no                         # 是否根据窗口大小缩放字幕（默认：yes）。影响纯文本及 ASS 格式的字幕
#sub-scale-with-window = no                       # 使字幕字体大小相对于窗口，而不是视频（默认：yes）。仅影响纯文本字幕
#sub-ass-scale-with-window = yes                  # 与--sub-scale-with-window 类似，但仅影响 ASS 格式的字幕（默认：no）。某些情况下此项可能导致 ass 样式错位

secondary-sub-ass-override = yes                  # 次字幕以正常ass样式渲染


#image-subs-video-resolution = yes                # 设置图像字幕（PGS，SUP，SUB等）的视频分辨率：mpv 播放器会将视频的分辨率应用于图像字幕，这意味着图像字幕的大小会根据视频的分辨率进行缩放。



# 截图

screenshot-format = jpg                            # 设置截图的格式为JPG
screenshot-jpeg-quality = 100                      # 设置JPG截图的质量为最高（100%）

screenshot-jxl-effort=5                            # <1-9> JXL 压缩等级，过高的等级影响性能，默认 4
screenshot-jxl-distance = 0                        # 设置JPEG XL截图的压缩距离为0（无损压缩）
screenshot-tag-colorspace = yes                    # 在截图中包含色彩空间的标签

screenshot-template = "~~/files/screenshot/MPV-%P-N%n"       # 设置截图的文件命名模板，存储到桌面
